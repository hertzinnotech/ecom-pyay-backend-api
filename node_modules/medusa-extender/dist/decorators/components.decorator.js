"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Subscriber = exports.Validator = exports.Router = exports.Migration = exports.Middleware = exports.Repository = exports.Service = exports.Entity = void 0;
const build_component_decorator_1 = require("./helpers/build-component-decorator");
/**
 * Mark a class as an entity to be used by the loader.
 * @param options
 * @constructor
 */
function Entity(options = {}) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'entity' }, options));
}
exports.Entity = Entity;
/**
 * Mark a class as a service to be used by the loader.
 * @param options
 * @constructor
 */
function Service(options = {}) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'service' }, options));
}
exports.Service = Service;
/**
 * Mark a class as a repository to be used by the loader.
 * @param options
 * @constructor
 */
function Repository(options = {}) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'repository' }, options));
}
exports.Repository = Repository;
/**
 * Mark a class as a middleware to be used by the loader.
 * @param options
 * @constructor
 */
function Middleware(options) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'middleware' }, options));
}
exports.Middleware = Middleware;
/**
 * Mark a class as a migration to be used by the loader.
 * @constructor
 */
function Migration() {
    return (0, build_component_decorator_1.buildComponentDecorator)({ type: 'migration' });
}
exports.Migration = Migration;
/**
 * Mark a class as a router to be used by the loader.
 * @param options
 * @constructor
 */
function Router(options) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'router' }, options));
}
exports.Router = Router;
/**
 * Mark a class as a validator to be used by the validator utility.
 * @param options
 * @constructor
 */
function Validator(options) {
    return (0, build_component_decorator_1.buildComponentDecorator)(Object.assign({ type: 'validator' }, options));
}
exports.Validator = Validator;
/**
 * Mark a class as a subscriber.
 * @constructor
 */
function Subscriber() {
    return (0, build_component_decorator_1.buildComponentDecorator)({ type: 'subscriber' });
}
exports.Subscriber = Subscriber;
//# sourceMappingURL=components.decorator.js.map