"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadMonitoringModule = void 0;
const core_1 = require("../core");
const logger = core_1.Logger.contextualize('MonitoringModule');
async function loadMonitoringModule(configModule, app, options) {
    if (!(configModule === null || configModule === void 0 ? void 0 : configModule.monitoring))
        return;
    logger.log('Found monitoring config in medusa-config');
    await (0, core_1.loadPackages)(logger, [
        { name: 'prom-client', version: '12.0.0' },
        { name: 'swagger-parser', version: '10.0.3' },
        { name: 'swagger-stats', version: '0.99.2' },
    ]);
    const swStats = await Promise.resolve().then(() => require('swagger-stats'));
    options = Object.assign(Object.assign({}, options), { name: 'Medusa-extender monitoring Dashboard' });
    if (options.swaggerSpec && typeof options.swaggerSpec === 'string') {
        const { default: swaggerParser } = await Promise.resolve().then(() => require('swagger-parser'));
        const parser = new swaggerParser();
        parser.validate(options.swaggerSpec, (err, api) => {
            const swaggerSpec = api;
            app.use(swStats.getMiddleware(Object.assign(Object.assign({}, options), { swaggerSpec })));
        });
        return;
    }
    app.use(swStats.getMiddleware(options));
    logger.log('Module properly attached');
}
exports.loadMonitoringModule = loadMonitoringModule;
//# sourceMappingURL=monitoring.js.map