"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.modulesLoader = void 0;
const decorators_1 = require("../decorators");
const core_1 = require("../core");
const componentMap_1 = require("../core/componentMap");
async function modulesLoader(modules, configModule, componentMap) {
    componentMap = componentMap || new componentMap_1.ComponentMap();
    const resolvedModules = [];
    for (const module of modules) {
        if (isDynamicModule(module)) {
            const resolvedImports = await new module().forRoot(configModule);
            let TransitionalModule = class TransitionalModule {
            };
            TransitionalModule = __decorate([
                (0, decorators_1.Module)({ imports: resolvedImports.imports })
            ], TransitionalModule);
            const subComponentMap = await modulesLoader([TransitionalModule], configModule);
            componentMap = new componentMap_1.ComponentMap([
                ...Array.from(componentMap.entries()),
                ...Array.from(subComponentMap.entries()),
            ]);
            continue;
        }
        resolvedModules.push(module);
    }
    return new componentMap_1.ComponentMap([...Array.from(componentMap.entries()), ...(0, core_1.metadataReader)(resolvedModules)]);
}
exports.modulesLoader = modulesLoader;
function isDynamicModule(module) {
    return module.prototype.forRoot && typeof module.prototype.forRoot === 'function';
}
//# sourceMappingURL=modules.loader.js.map