import { DateComparisonOperator } from "../../../../types/common";
import { Request } from "express";
/**
 * @oas [get] /batch-jobs
 * operationId: "GetBatchJobs"
 * summary: "List Batch Jobs"
 * description: "Retrieve a list of Batch Jobs."
 * x-authenticated: true
 * parameters:
 *   - (query) limit {string} The number of collections to return.
 *   - (query) offset {string} The offset of collections to return.
 *   - (query) type {string | string[]} Filter by the batch type
 *   - (query) confirmed_at {DateComparisonOperator | null} Date comparison for when resulting collections was confirmed, i.e. less than, greater than etc.
 *   - (query) pre_processed_at {DateComparisonOperator | null} Date comparison for when resulting collections was pre processed, i.e. less than, greater than etc.
 *   - (query) completed_at {DateComparisonOperator | null} Date comparison for when resulting collections was completed, i.e. less than, greater than etc.
 *   - (query) failed_at {DateComparisonOperator | null} Date comparison for when resulting collections was failed, i.e. less than, greater than etc.
 *   - (query) canceled_at {DateComparisonOperator | null} Date comparison for when resulting collections was canceled, i.e. less than, greater than etc.
 *   - (query) order {string} Order used when retrieving batch jobs
 *   - (query) expand[] {string} (Comma separated) Which fields should be expanded in each order of the result.
 *   - (query) fields[] {string} (Comma separated) Which fields should be included in each order of the result.
 *   - (query) deleted_at {DateComparisonOperator | null} Date comparison for when resulting collections was deleted, i.e. less than, greater than etc.
 *   - (query) created_at {DateComparisonOperator} Date comparison for when resulting collections was created, i.e. less than, greater than etc.
 *   - (query) updated_at {DateComparisonOperator} Date comparison for when resulting collections was updated, i.e. less than, greater than etc.
 * tags:
 *   - Batch Job
 * responses:
 *  "200":
 *    description: OK
 *    content:
 *      application/json:
 *        schema:
 *          properties:
 *            batch_job:
 *              $ref: "#/components/schemas/batch_job"
 */
declare const _default: (req: Request, res: any) => Promise<void>;
export default _default;
export declare class AdminGetBatchPaginationParams {
    limit: number;
    offset: number;
    expand?: string;
    fields?: string;
    order?: string;
}
export declare class AdminGetBatchParams extends AdminGetBatchPaginationParams {
    id?: string | string[];
    type?: string[];
    confirmed_at?: DateComparisonOperator | null;
    pre_processed_at?: DateComparisonOperator | null;
    completed_at?: DateComparisonOperator | null;
    failed_at?: DateComparisonOperator | null;
    canceled_at?: DateComparisonOperator | null;
    created_at?: DateComparisonOperator;
    updated_at?: DateComparisonOperator;
}
